/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-11-09 06:12:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jq1;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class test6_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"../js/jquery-3.7.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	$(document).ready(function(){\r\n");
      out.write("		// append() 뒤에 추가 / prepend() 앞에 추가\r\n");
      out.write("		$('body').append(\"<h2>집에가고 싶어요<h2>\");\r\n");
      out.write("		$('body').prepend(\"<h3>흑흑\");\r\n");
      out.write("		\r\n");
      out.write("		$('#c1').append(\"- 1\");	\r\n");
      out.write("		$('#c2').append(\"- 2\");	\r\n");
      out.write("		$('#c3').append(\"- 3\");	\r\n");
      out.write("		\r\n");
      out.write("		$('#c').append(function(idx,data){\r\n");
      out.write("			return \"- \"+ idx;\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		var tableData = [\r\n");
      out.write("			{\r\n");
      out.write("			no : 1,\r\n");
      out.write("			name : \"이진수\",\r\n");
      out.write("			gender : \"M\"\r\n");
      out.write("			},\r\n");
      out.write("			{\r\n");
      out.write("			no : 2,\r\n");
      out.write("			name : \"박상수\",\r\n");
      out.write("			gender : \"M\"\r\n");
      out.write("			},\r\n");
      out.write("			{\r\n");
      out.write("			no : 3,\r\n");
      out.write("			name : \"김허수\",\r\n");
      out.write("			gender : \"M\"\r\n");
      out.write("			},\r\n");
      out.write("			{\r\n");
      out.write("			no : 4,\r\n");
      out.write("			name : \"강분수\",\r\n");
      out.write("			gender : \"M\"\r\n");
      out.write("			},\r\n");
      out.write("			{\r\n");
      out.write("			no : 5,\r\n");
      out.write("			name : \"오실수\",\r\n");
      out.write("			gender : \"M\"\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("		];\r\n");
      out.write("		\r\n");
      out.write("/* 		for(var i = 0; i < tableData.length; i++){\r\n");
      out.write("			$('table').append(function(){\r\n");
      out.write("				return \"<tr><td>\"\r\n");
      out.write("				+ tableData[i].no +\r\n");
      out.write("				\"</td><td>\"\r\n");
      out.write("				+ tableData[i].name +\r\n");
      out.write("				\"</td><td>\"\r\n");
      out.write("				+ tableData[i].gender +\r\n");
      out.write("				\"</td></tr>\";\r\n");
      out.write("			});\r\n");
      out.write("		} */\r\n");
      out.write("		\r\n");
      out.write("		$.each(tableData,function(idx,item){ // = $(tableData).each(function(){});\r\n");
      out.write("			$('table').append(function(){\r\n");
      out.write("				return \"<tr><td>\"\r\n");
      out.write("				+ item.no +\r\n");
      out.write("				\"</td><td>\"\r\n");
      out.write("				+ item.name +\r\n");
      out.write("				\"</td><td>\"\r\n");
      out.write("				+ item.gender +\r\n");
      out.write("				\"</td></tr>\";\r\n");
      out.write("			});\r\n");
      out.write("		});\r\n");
      out.write("		\r\n");
      out.write("		setInterval(function(){\r\n");
      out.write("			$('#imgDiv').append($('img').first());\r\n");
      out.write("		},100);\r\n");
      out.write("		\r\n");
      out.write("	});\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>test6.jsp</h1>\r\n");
      out.write("	<div id=\"c1\"> 내용 </div>\r\n");
      out.write("	<div id=\"c2\"> 내용 </div>\r\n");
      out.write("	<div id=\"c3\"> 내용 </div>\r\n");
      out.write("	<div id=\"c\"> 내용 </div>\r\n");
      out.write("	\r\n");
      out.write("	<hr><hr>\r\n");
      out.write("	\r\n");
      out.write("	<table border=\"1\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>no</th>\r\n");
      out.write("			<th>name</th>\r\n");
      out.write("			<th>gender</th>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("	<hr><hr>\r\n");
      out.write("	\r\n");
      out.write("	<div id=\"imgDiv\">\r\n");
      out.write("		<img src=\"1.jpg\">\r\n");
      out.write("		<img src=\"2.jpg\">\r\n");
      out.write("		<img src=\"3.jpg\">\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
